% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_daily_hazards.R
\name{compute_daily_hazards}
\alias{compute_daily_hazards}
\title{Sample posterior daily hazards on a discretised timeline}
\usage{
compute_daily_hazards(
  time,
  status,
  a0 = 0.001,
  b0 = 1,
  maxT = max(time),
  n_samp = 10000,
  progress = TRUE
)
}
\arguments{
\item{time}{Integer vector of follow‑up times (days) for each subject.  Times
should be positive integers starting at 1.}

\item{status}{Integer vector of the same length as \code{time}, where
\code{status = 1} indicates that the event occurred at that time and
\code{status = 0} indicates a right‑censored observation.}

\item{a0}{Positive numeric value giving the prior shape parameter for the number
of events on each day (default is \code{0.001}).}

\item{b0}{Positive numeric value giving the prior shape parameter for the number
of non‑events on each day (default is \code{1}).}

\item{maxT}{A positive integer giving the upper bound of the discretized
follow-up time. This value defines the largest day index in the time grid
and therefore the maximum possible survival time considered in the analysis.}

\item{n_samp}{Integer; the number of Monte Carlo samples to draw from each
Beta posterior distribution (default is \code{10000}).}

\item{progress}{Logical; if \code{TRUE} (the default) a progress bar is displayed.}
}
\value{
A numeric matrix with \code{n_samp} rows and \code{K} columns, where
\code{K = max(time)}.  Column \code{i} contains draws from the posterior
distribution of the hazard on day \code{i}.
}
\description{
For a discrete follow‑up measured in days, \code{compute_daily_hazards()}
draws Monte Carlo samples from the posterior distribution of the discrete hazard
at each day.  Let \eqn{n_i} be the number of observed events on day \eqn{i},
and \eqn{d_i} be the number of individuals still at risk at the start of day
\eqn{i}.  Under independent \eqn{\mathrm{Beta}(a_0, b_0)} priors on each
hazard, the posterior for the hazard on day \eqn{i} is
\eqn{\mathrm{Beta}(a_0 + n_i,\; b_0 + d_i - n_i)}.  This function samples
\code{n_samp} values from each of these Beta distributions and returns them
as a matrix.
}
\examples{
set.seed(1)
times  <- c(2, 4, 4, 5, 6, 7)
status <- c(1, 0, 1, 0, 1, 1)
hz_draws <- compute_daily_hazards(times, status, a0 = 0.01, b0 = 1, n_samp = 500)
# Posterior mean hazard for each day
colMeans(hz_draws)
}
